//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryManagementSystemDemo.LibraryService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LibraryService.ILibraryService")]
    public interface ILibraryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAllBooks", ReplyAction="http://tempuri.org/ILibraryService/GetAllBooksResponse")]
        LMSService.Models.Book[] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/GetAllBooks", ReplyAction="http://tempuri.org/ILibraryService/GetAllBooksResponse")]
        System.Threading.Tasks.Task<LMSService.Models.Book[]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/BorrowBook", ReplyAction="http://tempuri.org/ILibraryService/BorrowBookResponse")]
        void BorrowBook(System.Guid bookId, System.Guid renterId, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/BorrowBook", ReplyAction="http://tempuri.org/ILibraryService/BorrowBookResponse")]
        System.Threading.Tasks.Task BorrowBookAsync(System.Guid bookId, System.Guid renterId, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ReserveBook", ReplyAction="http://tempuri.org/ILibraryService/ReserveBookResponse")]
        void ReserveBook(System.Guid renterId, System.Guid bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/ReserveBook", ReplyAction="http://tempuri.org/ILibraryService/ReserveBookResponse")]
        System.Threading.Tasks.Task ReserveBookAsync(System.Guid renterId, System.Guid bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/CreateRenter", ReplyAction="http://tempuri.org/ILibraryService/CreateRenterResponse")]
        System.Guid CreateRenter(string firstname, string lastname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILibraryService/CreateRenter", ReplyAction="http://tempuri.org/ILibraryService/CreateRenterResponse")]
        System.Threading.Tasks.Task<System.Guid> CreateRenterAsync(string firstname, string lastname);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILibraryServiceChannel : LibraryManagementSystemDemo.LibraryService.ILibraryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LibraryServiceClient : System.ServiceModel.ClientBase<LibraryManagementSystemDemo.LibraryService.ILibraryService>, LibraryManagementSystemDemo.LibraryService.ILibraryService {
        
        public LibraryServiceClient() {
        }
        
        public LibraryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LibraryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LMSService.Models.Book[] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<LMSService.Models.Book[]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public void BorrowBook(System.Guid bookId, System.Guid renterId, System.DateTime from, System.DateTime to) {
            base.Channel.BorrowBook(bookId, renterId, from, to);
        }
        
        public System.Threading.Tasks.Task BorrowBookAsync(System.Guid bookId, System.Guid renterId, System.DateTime from, System.DateTime to) {
            return base.Channel.BorrowBookAsync(bookId, renterId, from, to);
        }
        
        public void ReserveBook(System.Guid renterId, System.Guid bookId) {
            base.Channel.ReserveBook(renterId, bookId);
        }
        
        public System.Threading.Tasks.Task ReserveBookAsync(System.Guid renterId, System.Guid bookId) {
            return base.Channel.ReserveBookAsync(renterId, bookId);
        }
        
        public System.Guid CreateRenter(string firstname, string lastname) {
            return base.Channel.CreateRenter(firstname, lastname);
        }
        
        public System.Threading.Tasks.Task<System.Guid> CreateRenterAsync(string firstname, string lastname) {
            return base.Channel.CreateRenterAsync(firstname, lastname);
        }
    }
}
